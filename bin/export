#!/usr/bin/env node

'use strict';

const fs = require('fs-promise')
const path = require('path')
const marked = require('marked')

const GLOSSARY_FOLDER = path.join(process.cwd(), 'glossary')
const DESTINATION_FILE = process.argv[2] || 'data.json'

const parse = content => ({
  name: content.match(/^#\s*(.+)$|^/m)[1],
  markdown: content.match(/^.*\n+([\s\S]+)|^/)[1]
})

const collect = file => fs.readFile(path.join(GLOSSARY_FOLDER, file), 'utf8')
  .then(parse)
  .then(obj => Object.assign(obj, {
    html: marked(obj.markdown || ''),
    url: `https://github.com/HugoGiraudel/SJSJ/blob/master/glossary/${file}`
  }))

fs.readdir(GLOSSARY_FOLDER)
  .then(files => Promise.all(files.map(collect)))
  .then(entries => JSON.stringify(entries, null, 2))
  .then(data => fs.writeFile(DESTINATION_FILE, data))
  .then(() => console.log(`${DESTINATION_FILE} successfully generated.`))
  .catch(error => { throw error })
